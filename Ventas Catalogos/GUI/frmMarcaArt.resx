<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAuoZ/ABV7pQAdgakAJYKpACiCqAAshKoAKYWsACyHrQAyiKsAMomvADaKrQA4iq0AOIyvACmH
        sgAriLEALYmxADKKsQAwjLUAOY6yAD2PsgA1j7sAO5K1ADyStAA3kLsAPpO4AEiEngB3gIUAf4WIAEmM
        qABAkbIARZK0AEuTswBPlrUAT5m5AE2cuwBNnLwAU5u4AFOevgBVn74AWZu5AFydvABXoL4AfaO8ADuY
        xQBAn84AXKPAAEmi0wBOp9cARaPbAGymwABhqcYAbKnDAHGpwgB3rMUAeq7GAHyuxgB5o8oAfKDIAH+k
        yQBxrsgAfLDIAHu0zAB9tc0AZqPXAGuu0QBqptoAcrHfAFmy7ABetfAAXbn2AF29+ABlq+QAbrXmAGOy
        7gBlsu0AZ7bsAG627gBmuO8AdbnrAHG77wBiuPEAYr33AGa7+ABivfkAZL/6AFXB/wBWxP8AWsL/AHzB
        7wBtwvsAacL+AGXJ/wBpyP8AccL9AHPN/wCJh4cAioqJAJOOiQCTk5MAlZWVAJubmwCdnZ0ArIeKAKiK
        jwC6jYsApImRAKaLlACujZEAso+SALSPkACtnpEAq5CYALyWkgCwlZwAi5OvAJ+SowCakqcAm5SlAJeX
        qwCCmLsAip+8AJOZtQCem7IAm6S+AKCiowCmpqYApaeoAKqpqQC6q6AAvLSsALGxsQC2trYAuLOwALq6
        ugDImo0AwpaSAM+imQDQpZYA1aSVANKkmwDVqZ8A2quaANusmwDfs5oA1LifAOG2nwDUqqIA2KyiAMu3
        pgDcs6gA3rWrAOG1oQDlvakA4r+1AOTCugDmxr4A8tC3APTQuQDy0b0Ai6HAAImlwgCMrcoAmKzIAIWz
        yQCGtMkAgbbMAIG4zwCIvNIAk73RAJS+0gCQs9kAlcHWAKLG1wClyNkAhdL/AIDU/wCK0P8AjNX/AI7Y
        /wCd2f8Aps7kAKnO4ACqzuUAq9HqALjX5gC01ukAvNrpAKHe/wCq3v4Ast/7AKrg/wCs4P8AvuDzALrl
        /wDBwcEAxMTEAMnJyQDLzMwA0NDQANXV1QDb29sA6MjBAOzPyADv2c4A8NTIAPHayADx2tQA8d3WAPbg
        xwDz5NIA+e/VAPbl3wD45dkA/O3YAPnr3wD9790A//HaAP/12gD+8t4AwtrlAMPk9QDE5fcAzubzANfv
        /QDi4uIA5OTkAOjo5gDr6+sA7+/vAPfq4gD06uUA++/oAP3z4gD+9OIA+fHmAP/15QD/+OYA/vbpAPny
        7QD/9+wA/vjpAP/47QDx8fEA9fX1APz28gD++fIA+fj3AP779QD//PUA+vr6AP77+QD//fkA/v7+ANrR
        /wD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACMu
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEqTcHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        Bra/wq4MJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJwu6skZYtN81BwAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACYMubM6AaBWX+A4AgAAAAAAAAAAAAAAAAAAAAAAAAAkKMGveInQk3ZMXMKtBD8AAAAAAAAAAAAAAAAA
        AAAAFzK+WnON9f/4m2k7WLy7IRYAAAAAAAAAAAAAAAAAABE9vU1qlvv89vb55ox3RrDepQSoAAAAAAAA
        AAAAAAADpMBKZ8r///j28vDy9pdoTlzC3AYqAAAAAAAAAAAAAze9S2uc///8+Pby8O7x8ppsQ1e8uyAj
        AAAAAAAAAAWqtEhsy////fz49vLw7uzs8MyIeUew3TYIAAAAAD8Lt7FCcc/////9/Pn28vDu7Orb7deU
        cEldwqwHAAA8CbpbQIfU//////38+fby8O7s6tvZ2e3NblVdQRQApwu1XjmK0P///////fz59vLw7uzq
        29nZ2p9yWzAEAAAfuFOhmej////////9/Pn28vDu7Orb29mYbU8vBgAAPilZop7///////////38+fby
        8O7s6urYjnRQLQ0AAAAALg6CzsXh/////////Pz59vLw7uzs2It6UiweAAAAAAAAMx1iZmPF///////8
        /Pn28vDu7eyPdVQYBgAAAAAAAAAAABv384OA5P////z8+fby7u3pmHtRFSIAAAAAAAAAAAB/w////8hm
        xf////br8enp1ph8RRI0AAAAAAAAAAAAYMj//fr///ODf+P57+fS09GQo0QPPgAAAAAAAAAAAAAAZOL/
        9+X6///GYYXy7dWdkqtEBKYAAAAAAAAAAAAAAAAAZcb05eLl9/TIfW+RlYErMRA8AAAAAAAAAAAAAAAA
        AAAAhGXH4snIxISAHBoKExklAAAAAAAAAAAAAAAAAAAAAAAAAH6Aw2OGAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAACEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP//////////////////P////h////wH///wA///4AH//8AAf/+AAD//AAAP/gAAB/wA
        AAP4AAAB4AAAAMAAAACAAAABgAAAAwAAAAeAAAAPwAAAH/AAAD/gAAB/wAAA/+AAAf/wAAP/+AAP//4P
        ////v///////////////////
</value>
  </data>
</root>